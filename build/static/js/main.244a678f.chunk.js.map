{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","imageUrl","setImageUrl","data","setData","selected","setSelected","score","setScore","tempData","color","tempImage","randomizePositions","randomValues","length","r","Math","floor","random","indexOf","push","i","prevState","useEffect","checkDuplicates","input","duplicate","console","log","Container","className","style","map","name","Card","width","height","margin","display","justifyContent","alignItems","borderRadius","cursor","backgroundColor","onClick","Img","src","Title","fontSize","fontWeight","bottom","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAsIeA,MAnIf,WAAe,MAEmBC,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGWF,mBAAS,IAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAImBJ,mBAAS,IAJ5B,mBAINK,EAJM,KAIIC,EAJJ,OAKaN,mBAAS,GALtB,mBAKNO,EALM,KAKCC,EALD,KAOTC,EAAW,CACb,QACA,SACA,SACA,QACA,aACA,cACA,eACA,YAGEC,EAAQ,CACV,OACA,YACA,aACA,OACA,kBACA,cACA,SACA,UAGEC,EAAY,CACd,oEACA,4FACA,mIACA,iIACA,2GACA,2EACA,0HACA,sFAGIC,EAAqB,WAGzB,IAFA,IAAIC,EAAe,GAEZA,EAAaC,OAAS,GAAG,CAC9B,IAAIC,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,WACS,IAA7BL,EAAaM,QAAQJ,IAAWF,EAAaO,KAAKL,GAGxDX,EAAQ,IACRF,EAAY,IAEZ,IAX+B,eAWtBmB,GACPjB,GAAQ,SAACkB,GAAD,4BAAmBA,GAAnB,CAA8Bb,EAASI,EAAaQ,SAC5DnB,GAAY,SAACoB,GAAD,4BAAmBA,GAAnB,CAA8BX,EAAUE,EAAaQ,UAF1DA,EAAI,EAAGA,EAAIZ,EAASK,OAAQO,IAAM,EAAlCA,IAMXE,qBAAU,WACRX,MACC,IAEH,IAKMY,EAAkB,SAACC,GACvB,IAAMC,EAAYrB,EAASc,QAAQM,GACnCE,QAAQC,IAAIH,IAEO,IAAfC,GARJlB,EAAS,GACTF,EAAY,MAUVA,GAAY,SAACgB,GAAD,4BAAmBA,GAAnB,CAA8BG,OAC1CjB,EAASD,EAAQ,GACjBK,MAIJ,OACE,8BACE,eAACiB,EAAA,EAAD,WACE,sBAAKC,UAAU,QAAf,UACA,6CAEA,qBAAIC,MAAO,CAAErB,MAAO,SAApB,oBAAuCH,EAAvC,UAEA,qBAAKuB,UAAU,iBAAf,SACG3B,EAAK6B,KAAI,SAACC,EAAMZ,GAAP,OACR,eAACa,EAAA,EAAD,CAEEH,MAAO,CACLI,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,aAAc,MACdC,OAAQ,UACRC,gBAAgB,GAAD,OAAKjC,EAAMW,KAE5BuB,QAAS,kBAAMpB,EAAgBS,IAbjC,UAeE,cAACC,EAAA,EAAKW,IAAN,CACEd,MAAO,CACLI,MAAO,MACPC,OAAQ,OACRC,OAAQ,QAEVS,IAAK7C,EAASoB,KAEhB,cAACa,EAAA,EAAKa,MAAN,CACEhB,MAAO,CACLrB,MAAO,QACPsC,SAAU,OACVC,WAAY,MACZC,OAAQ,EACRC,SAAU,YANd,SASGlB,MA/BEZ,cCjFJ+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.244a678f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\n\nfunction App() {\n  // let data = [];\n  const [imageUrl, setImageUrl] = useState([]);\n  const [data, setData] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [score, setScore] = useState(0);\n\n  let tempData = [\n    \"Apple\",\n    \"Banana\",\n    \"Orange\",\n    \"Berry\",\n    \"Watermelon\",\n    \"Pomegranate\",\n    \"Dragon Fruit\",\n    \"Rambutan\",\n  ];\n\n  let color = [\n    \"gold\",\n    \"indianred\",\n    \"darkorange\",\n    \"pink\",\n    \"mediumslateblue\",\n    \"yellowgreen\",\n    \"tomato\",\n    \"orange\",\n  ]\n\n  let tempImage = [\n    \"https://images.pngnice.com/download/2007/Red-Apple-PNG-Photos.png\",\n    \"https://www.seekpng.com/png/full/9-95205_banana-png-picture-transparent-png-3-bananas.png\",\n    \"https://purepng.com/public/uploads/large/purepng.com-orange-orangeorangefruitbitter-orangeorangesclip-art-17015273373713wgvk.png\",\n    \"https://purepng.com/public/uploads/large/purepng.com-blackberryhybridsblackberryrubus-subgenusfoodfruit-1701527190060tjwzl.png\",\n    \"https://www.nicepng.com/png/full/168-1685591_watermelon-png-source-truth-vegan-bcaa-watermelon-truth.png\",\n    \"https://freepngimg.com/thumb/pomegranate/5-2-pomegranate-png-picture.png\",\n    \"https://purepng.com/public/uploads/large/purepng.com-dragon-fruitfruitsdragon-fruitpitayapitahaya-981524762841msxvf.png\",\n    \"https://www.nicepng.com/png/full/419-4193342_thumb-image-exotic-fruit-rambutan.png\",\n  ];\n\n  const randomizePositions = () => {\n    let randomValues = [];\n\n    while (randomValues.length < 8) {\n      var r = Math.floor(Math.random() * 8);\n      if (randomValues.indexOf(r) === -1) randomValues.push(r);\n    }\n\n    setData([]);\n    setImageUrl([]);\n\n    for (let i = 0; i < tempData.length; i++) {\n      setData((prevState) => [...prevState, tempData[randomValues[i]]]);\n      setImageUrl((prevState) => [...prevState, tempImage[randomValues[i]]]);\n    }\n  };\n\n  useEffect(() => {\n    randomizePositions();\n  }, []);\n\n  const gameOver = () => {\n    setScore(0);\n    setSelected([]);\n  };\n\n  const checkDuplicates = (input) => {\n    const duplicate = selected.indexOf(input);\n    console.log(input);\n\n    if (duplicate !== -1) {\n      gameOver();\n    } else {\n      setSelected((prevState) => [...prevState, input]);\n      setScore(score + 1);\n      randomizePositions();\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <div className=\"title\">\n        <h1>Memory Game</h1>\n\n        <h2 style={{ color: \"white\" }}>SCORE: {score} </h2>\n        </div>\n        <div className='Card-Container'>\n          {data.map((name, i) => (\n            <Card\n              key={i}\n              style={{\n                width: \"200px\",\n                height: \"250px\",\n                margin: \"1rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n                backgroundColor: `${color[i]}`,\n              }}\n              onClick={() => checkDuplicates(name)}\n            >\n              <Card.Img\n                style={{\n                  width: \"90%\",\n                  height: \"auto\",\n                  margin: \"10px\",\n                }}\n                src={imageUrl[i]}\n              ></Card.Img>\n              <Card.Title\n                style={{\n                  color: \"white\",\n                  fontSize: \"15px\",\n                  fontWeight: \"600\",\n                  bottom: 0,\n                  position: \"absolute\",\n                }}\n              >\n                {name}\n              </Card.Title>\n            </Card>\n          ))}\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}